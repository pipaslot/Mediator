<Spinner Show="_show"/>
@using Demo.Client.Shared.Components
@using Pipaslot.Mediator.Middlewares
@implements IDisposable
@inject IServiceProvider Services;

@code {
    private bool _show;

    /// <summary>
    /// The middleware does need to be available when using server side pre-rendeing
    /// </summary>
    private ActionEventsMiddleware? _actionEvents;

    protected override void OnInitialized()
    {
        _actionEvents = Services.GetService<ActionEventsMiddleware>();
        if (_actionEvents is not null)
        {
            _actionEvents.ProcessingStarted += OnStarted;
            _actionEvents.ProcessingCompleted += OnFinished;
        }
    }

    public void Dispose()
    {
        if (_actionEvents is not null)
        {
            _actionEvents.ProcessingStarted -= OnStarted;
            _actionEvents.ProcessingCompleted -= OnFinished;
        }
    }

    private void OnStarted(object? sender, EventArgs args)
    {
        _show = true;
        StateHasChanged();
    }

    private void OnFinished(object? sender, EventArgs args)
    {
        _show = false;
        StateHasChanged();
    }

}