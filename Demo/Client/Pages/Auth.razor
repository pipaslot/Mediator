@page "/auth"
@using Demo.Shared.Auth
@using Demo.Client.Pages.AuthComponents
@inject AuthService AuthService

<AuthorizeView>
    <NotAuthorized>
        <button class="btn btn-primary btn-sm" @onclick="Login">Login</button>
    </NotAuthorized>
    <Authorized>
        <button class="btn btn-primary btn-sm" @onclick="Logout">Logout</button> Your role is: visitor
    </Authorized>
</AuthorizeView>
<hr />
<h4>Conditional authenthorization</h4>

<ConditionalAuthorization Model="_formModel1" @key="@($"form1-{isAuthenticated}")" />

@code {
    private bool isAuthenticated;
    private ConditionalAuthorizationMessage _formModel1 = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await UpdateState();
    }

    private async Task Login()
    {
        await AuthService.SignIn("Demo", "haha");
        await Task.Delay(100);
        await UpdateState();
    }

    private async Task Logout()
    {
        await AuthService.SignOut();
        await UpdateState();
    }

    private async Task UpdateState()
    {
        var state = await AuthService.GetAuthenticationStateAsync();
        isAuthenticated = state.User.Identity?.IsAuthenticated ?? false;
    }

}
